package ca.winterfamily.bggpersonal;

import java.io.StringReader;
import java.util.UUID;

import org.xmlpull.v1.XmlPullParser;

import android.util.Log;
import android.util.Xml;

public class Game {
	private UUID mId;
	private String mName;
	public boolean mOwned = false;
	public int mPlays = 0;
	public String mBggId = "";
	public String mWishlist = "";
	
	public Game(String name) {
		mId = UUID.randomUUID();
		mName = name;
	}
	
	public Game() {
		mId = UUID.randomUUID();
		mName = "unknown";
	}

	public UUID getId() {
		return mId;
	}
	
	public String getName() {
		return mName;
	}
	
	public void setName(String name) {
		mName = name;
	}
	
	@Override
	public String toString() {
		String out = getName();
		if (mOwned) {
			out += " (own)";
		}
		out += " (plays: " + mPlays + ")";
		return out;
	}
	
	public void populateFromXML(String xml) {
		XmlPullParser parser = Xml.newPullParser();
		parser.setInput(new StringReader(xml));
		
		boolean inItem = false;
    	boolean inName = false;
    	boolean inNumplays = false;
    	boolean inStatus = false;
    	Game curGame = null;
    	boolean skip = false;
    	
	    int eventType = parser.getEventType();
	    while (eventType != XmlPullParser.END_DOCUMENT) {
	    	switch (eventType) {
	    		case XmlPullParser.START_TAG:
		    		if (parser.getName().compareTo("item") == 0) {
		    			inItem = true;
		    			skip = false;
		    			curGame = null;
		    			
		    			String objecttype = parser.getAttributeValue(null,  "objecttype");
		    			String objectid = parser.getAttributeValue(null, "objectid");
		    			String subtype = parser.getAttributeValue(null, "subtype");
		    			
		    			if (subtype.compareTo("boardgame") != 0)  {
		    				skip = true;
		    			} else {
			    			curGame = new Game();
			    			curGame.mBggId = objectid;
		    			}
		    			
		    		} else if (!skip && inItem && (parser.getName().compareTo("name") == 0)) {
		    			inName = true;
		    		} else if (!skip && inItem && (parser.getName().compareTo("numplays") == 0)) {
		    			inNumplays = true;
		    		} else if (!skip && inItem && (parser.getName().compareTo("status") == 0)) {
		    			inStatus = true;
		    			String own = parser.getAttributeValue(null,  "own");
		    			curGame.mWishlist = parser.getAttributeValue(null, "wishlist");
		    			Log.i("BGGPersonal", "own in BGGUser " + own);
		    			if (own.compareToIgnoreCase("1") == 0) {
		    				curGame.mOwned = true;
		    			}
		    		}
	    			break;
	    			
	    		case XmlPullParser.END_TAG:
		    		if (inItem && (parser.getName().compareTo("item") == 0)) {
		    			if (!skip && (curGame.mOwned || (curGame.mWishlist.compareTo("5") != 0))) {
		    				mGameList.add( curGame );
		    			}
		    			inItem = false;
		    			inName = false;
		    		   	inNumplays = false;
		    		    curGame = null;
		    		} else if (!skip && inName && (parser.getName().compareTo("name") == 0)) {
		    			inName = false;
		    		} else if (!skip && inNumplays && (parser.getName().compareTo("numplays") == 0)) {
		    			inNumplays = false;
		    		} else if (!skip && inStatus && (parser.getName().compareTo("status") == 0)) {
		    			inStatus = false;
		    		}
		    		break;
		    		
	    		case XmlPullParser.TEXT:
		    		if (!skip && inName) {
		    			curGame.setName( parser.getText() );
		    		} else if (!skip && inNumplays) {
		    			curGame.mPlays = Integer.parseInt(parser.getText());
		    		}
		    		break;

		    		
	    	}

            eventType = parser.next();
	    }
	  
		
	}
}
